name: 'build flutter engine'
description: 'configure and build the flutter engine'
inputs:
  ref:
    description: 'The ref (commit hash, branch) of the engine repo for which the engine should be built.'
    required: true
  repository:
    description: 'The engine repository that should be built. Defaults to the official flutter engine repo.'
    required: false
    default: https://github.com/flutter/engine.git
  runtime-mode:
    description: 'The value of the `--runtime-mode` parameter passed to `flutter/tools/gn`. Can be one of debug, profile, release, jit_release.'
    required: false
    default: 'debug'
  is-host:
    description: 'Either `true` or `false`. If this is true, no --$os-cpu=$cpu arg is passed to `flutter/tools/gn` and the flutter engine will be built for the host system instead.'
    required: false
    default: 'true'
  os:
    description: 'The `$os` part of the `--$os-cpu=$cpu` arg passed to `flutter/tools/gn`. Can be one of android, ios, mac, linux, fuchsia, windows'
    required: false
    default: 'linux'
  cpu:
    description: 'The `$cpu` part of the `--$os-cpu=$cpu` arg passed to `flutter/tools/gn`. Can be one of arm, arm64, x64, x86 (depending on OS)'
    required: false
    default: 'arm'
  additional-gn-args:
    description: 'Additional arguments passed to flutter/tools/gn.'
    required: false
  additional-raw-gn-args:
    description: 'Additional lines to be appended to the generated args.gn file.'
    required: false
runs:
  using: "composite"
  steps:
    - name: Check depot tools already in path
      id: depot-tools-in-path
      shell: bash
      run: |
        (which gclient && echo 'found=true' >> $GITHUB_OUTPUT) || echo 'found=false' >> $GITHUB_OUTPUT
      
    - name: Clone depot tools
      if: ${{ steps.depot-tools-in-path.outputs.found == 'false' }}
      shell: bash
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git $GITHUB_WORKSPACE/depot_tools
        echo $GITHUB_WORKSPACE/depot_tools >> $GITHUB_PATH
        
    - name: Setup environment variables
      shell: bash
      run: |
        # echo DEPOT_TOOLS_UPDATE=0 >> $GITHUB_ENV
        echo GCLIENT_PY3=1 >> $GITHUB_ENV
        echo $PATH
        echo is-host: ${{ inputs.is-host }}
        
    - name: Setup gclient
      shell: bash
      run: |
        gclient --version
        
    - name: Download cached engine sources
      uses: actions/cache@v3
      id: cache
      env:
        SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5
      with:
        path: engine
        key: engine-${{ inputs.ref }}

    - name: Check if downloading engine sources succeeded
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('Could not find cached engine source!')

    - name: Apply patch "Fix armv7 build"
      shell: bash
      working-directory: engine/src
      run: |
        git apply $GITHUB_WORKSPACE/0001-fix-armv7-build.patch
    
    - name: Show git status
      shell: bash
      working-directory: engine/src
      run: git status
    
    - name: Configure engine (host)
      if: ${{ inputs.is-host == 'true' }}
      shell: bash
      working-directory: engine
      run: |
        ./src/flutter/tools/gn \
          --runtime-mode ${{ inputs.runtime-mode }} \
          --target-dir build \
          ${{ inputs.additional-gn-args }}

    - name: Configure engine (cross, not linux armhf)
      if: ${{ inputs.is-host == 'false' && !(inputs.os == 'linux' && inputs.cpu == 'arm') }}
      shell: bash
      working-directory: engine
      run: |
        ./src/flutter/tools/gn \
          --runtime-mode ${{ inputs.runtime-mode }} \
          --target-os ${{ inputs.os }} \
          --${{ inputs.os }}-cpu ${{ inputs.cpu }} \
          --target-dir build \
          ${{ inputs.additional-gn-args }}

    - name: Configure engine (cross, linux armhf)
      if: ${{ inputs.is-host == 'false' && (inputs.os == 'linux' && inputs.cpu == 'arm') }}
      shell: bash
      working-directory: engine
      run: |
        PKG_CONFIG_PATH=$GITHUB_WORKSPACE/engine/src/build/linux/debian_sid_arm-sysroot/usr/lib/arm-linux-gnueabihf/pkgconfig:/usr/share/pkgconfig \
        ./src/flutter/tools/gn \
          --runtime-mode ${{ inputs.runtime-mode }} \
          --target-os ${{ inputs.os }} \
          --${{ inputs.os }}-cpu ${{ inputs.cpu }} \
          --arm-float-abi hard \
          --target-dir build \
          ${{ inputs.additional-gn-args }}
    
    - name: Append raw gn args
      if: ${{ inputs.additional-raw-gn-args != '' }}
      shell: bash
      working-directory: engine/src/out/build/
      run: |
        echo '${{ inputs.additional-raw-gn-args }}' >> args.gn
        echo '*** args.gn file: ***'
        cat args.gn
        echo '*** rerunning gn gen ***'
        gn gen --export-compile-commands .

    - name: Build engine
      shell: bash
      working-directory: engine/src/out/build
      run: |
        ninja
